server {
    listen 80 default_server;
    server_name _;

    index index.html;
    root /usr/share/nginx/html;

    # to boost I/O on HDD we can disable access logs
    error_log off;
    access_log off;

    gzip on;

    gzip_disable "msie6";
    gzip_vary on;
    gzip_comp_level 6;
    gzip_buffers 32 16k;
    gzip_http_version 1.1;
    gzip_min_length 250;
    gzip_proxied expired no-cache no-store private auth;
    gzip_types
        # text/html is always compressed by HttpGzipModule
        text/css
        text/javascript
        text/xml
        text/plain
        text/x-component
        image/jpeg
        image/bmp
        image/svg+xml
        image/x-icon
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/rss+xml
        application/atom+xml
        font/truetype
        font/opentype
        application/vnd.ms-fontobject;

    # security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload";
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy "no-referrer, strict-origin-when-cross-origin";
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains";
    add_header X-XSS-Protection "1; mode=block";

    # copies data between one FD and other from within the kernel
    # faster than read() + write()
    sendfile on;

    # send headers in one piece, it is better than sending them one by one
    tcp_nopush on;

    # don't buffer data sent, good for small data bursts in real time
    tcp_nodelay on;

    # allow the server to close connection on non responding client, this will free up memory
    reset_timedout_connection on;

    # request timed out -- default 60
    client_body_timeout 16;

    # if client stop responding, free up memory -- default 60
    send_timeout 8;

    # server will close connection after this time -- default 75
    keepalive_timeout 32;

    # if the request body size is more than the buffer size, then the entire (or partial)
    # request body is written into a temporary file
    client_body_buffer_size  128k;

    # maximum number and size of buffers for large headers to read from client request
    large_client_header_buffers 4 256k;

    # avoids token vulnerabilities
    server_tokens off;

    location / {
      try_files $uri /index.html =404;
    }

    location ~* \.(jpg|jpeg|png|gif|ico)$ {
      expires 365d;
    }

    location ~* \.(css|js)$ {
      expires 30d;
    }
}
